%implements s6_b0_b7emq_Outputs "C"

%function OutputsForTID(block, system, tid) Output
%if tid == 0
%assign ::GlobalCurrentTID = 0
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%assign _modelSS = ""

%assign   Outputs_open_nze2gu2u453_6_0 = ""
%openfile Outputs_open_nze2gu2u453_6_0

/* Outputs for Atomic SubSystem: '<Root>/Flight Control System' */
%closefile Outputs_open_nze2gu2u453_6_0

%assign    Outputs_body_nze2gu2u453_6_0 = ""
%openfile  Outputs_body_nze2gu2u453_6_0

%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[2], "Output",0)
%if SLibCG_SystemFcnArgAccessed("nze2gu2u45",2,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCGIRGenReusableSysCall("nze2gu2u45", ["%<_modelSS>", "&nddvfly45ww.nze2gu2u453", "&lqi2z1yyyci.nze2gu2u453", "&hoklqri30v.nze2gu2u453"], 2, 0, 7, 0, 7, 6)>\


%endif
%closefile Outputs_body_nze2gu2u453_6_0

%assign    Outputs_close_nze2gu2u453_6_0 = ""
%openfile  Outputs_close_nze2gu2u453_6_0

/* End of Outputs for SubSystem: '<Root>/Flight Control System' */
%closefile Outputs_close_nze2gu2u453_6_0
%<SLibCG_DumpSSCode(Outputs_open_nze2gu2u453_6_0, Outputs_body_nze2gu2u453_6_0, Outputs_close_nze2gu2u453_6_0)>


/* SignalConversion: '<Root>/TmpSignal ConversionAtFlight Control SystemOutport1' */
motors_outport[0] = nddvfly45ww.nze2gu2u453.oxhvy13tx0[0];
motors_outport[1] = nddvfly45ww.nze2gu2u453.oxhvy13tx0[1];
motors_outport[2] = nddvfly45ww.nze2gu2u453.oxhvy13tx0[2];
motors_outport[3] = nddvfly45ww.nze2gu2u453.oxhvy13tx0[3];
/* SignalConversion: '<Root>/TmpSignal ConversionAtFlight Control SystemOutport2' */
flag_outport = nddvfly45ww.nze2gu2u453.pvibauom3o;
%<SLibInsertSolverResetCode()>\
%closefile cfgTxt
%<cfgTxt>
%<LibSetSystemField(system, "CachedOutput0LocalVars", localVarDecl)>
%assign ::GlobalCurrentTID = []
%endif
%if tid == 1
%assign ::GlobalCurrentTID = 1
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%openfile localVarDecl

int32_T e[2];
int32_T i;
const uint8_T *u0;
%closefile localVarDecl
/* {S!d9487}Outputs for Atomic SubSystem: '<Root>/Image Processing System' */
/* {S!d9490}MATLABSystem: '<S2>/PARROT Image Conversion' incorporates:
 *  Inport: '<Root>/Image Data'
 */
u0 = &imRGB[0];
MW_Build_RGB(u0, nddvfly45ww.imageBuff_1, nddvfly45ww.imageBuff_2, nddvfly45ww.imageBuff_3);
/* {S!d9492}MATLAB Function: '<S2>/MATLAB Function' */
/* MATLAB Function 'Image Processing System/MATLAB Function': '<S4>:1' */
/* '<S4>:1:3' */
memset(&nddvfly45ww.b[0], 0, 25U * sizeof(int32_T));
memset(&nddvfly45ww.imnhInds_[0], 0, 25U * sizeof(int32_T));
memset(&nddvfly45ww.c[0], 0, 50U * sizeof(int32_T));
e[0] = 120;
e[1] = 160;
for (i = 0; i < 25; i++) {
    nddvfly45ww.bv0[i] = true;
}
%<(SLibCGCallSubFcn("jvlp4q5njx", ["e", "nddvfly45ww.bv0", "nddvfly45ww.b", "nddvfly45ww.imnhInds_", "nddvfly45ww.c", "nddvfly45ww.unusedExpr"], 1, 5, 0))>;
/* {E!d9492}End of MATLAB Function: '<S2>/MATLAB Function' */
/* {E!d9487}End of Outputs for SubSystem: '<Root>/Image Processing System' */
%closefile cfgTxt
%<cfgTxt>
%<LibSetSystemField(system, "CachedOutput1LocalVars", localVarDecl)>
%assign ::GlobalCurrentTID = []
%endif
%endfunction
%function OutputsFcnProtoTypeForTID(block, system, tid) Output
%if tid == 0
%assign ::GlobalCurrentTID = 0
%assign fcnProtoType = ""
%openfile fcnProtoType
static void Outputs0(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(1, 4, fcnProtoType)>
%assign ::GlobalCurrentTID = []
%endif
%if tid == 1
%assign ::GlobalCurrentTID = 1
%assign fcnProtoType = ""
%openfile fcnProtoType
static void Outputs1(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(1, 5, fcnProtoType)>
%assign ::GlobalCurrentTID = []
%endif
%endfunction
